fullnameOverride: crunchy-postgres

deployer:
  serviceAccount:
    enabled: false

  # This requires PGO v5.1.0
  # https://github.com/CrunchyData/postgres-operator/issues/3032
  # Also needs a route to be set as well as networkPolicy to be enabled to allow ingress to the interface
  # Port forwarding is enabled with userInterface and is required to access the dashboard
userInterface:
  enabled: false
  pgAdmin:
    image: artifacts.developer.gov.bc.ca/bcgov-docker-local/crunchy-pgadmin4:ubi8-4.30-10
    dataVolumeClaimSpec:
      accessModes: "ReadWriteOnce"
      requests:
        storage: 256Mi

crunchyImage: artifacts.developer.gov.bc.ca/bcgov-docker-local/crunchy-postgres:centos8-14.1-0

# If userInterface is enabled it is important to know that pgAdmin is currently incompatible with Postgresql 15
# https://access.crunchydata.com/documentation/postgres-operator/v5/architecture/pgadmin4/
postgresVersion: 14

# Postgres Cluster resource values:
pgmonitor:
  enabled: false
  exporter:
    image: artifacts.developer.gov.bc.ca/bcgov-docker-local/crunchy-postgres-exporter:ubi8-5.0.4-0
    requests:
      cpu: 1m
      memory: 64Mi
    limits:
      cpu: 50m
      memory: 128Mi

instances:
  name: ha # high availability
  replicas: 3
  requests:
    cpu: 1m
    memory: 256Mi
  limits:
    cpu: 100m
    memory: 512Mi
  sidecars:
    replicaCertCopy:
      requests:
        cpu: 1m
        memory: 32Mi
      limits:
        cpu: 50m
        memory: 64Mi

dataVolumeClaimSpec:
  storage: 256Mi

pgbackrest:
  image: artifacts.developer.gov.bc.ca/bcgov-docker-local/crunchy-pgbackrest:centos8-2.36-0
  retention: "30"
  # If retention-full-type set to 'count' then the oldest backups will expire when the number of backups reach the number defined in retention
  # If retention-full-type set to 'time' then the number defined in retention will take that many days worth of full backups before expiration
  retentionFullType: count
  repos:
    name: repo1
    schedules:
      full: 0 8 * * *
      incremental: 0 0,4,12,16,20 * * *
    volume:
      accessModes: "ReadWriteOnce"
      storage: 256Mi
      storageClassName: netapp-file-backup
    s3:
      enabled: false
      bucket:
      endpoint:
      region:
    gcs:
      enabled: false
      bucket:
    azure:
      enabled: false
      container:
  repoHost:
    requests:
      cpu: 1m
      memory: 64Mi
    limits:
      cpu: 50m
      memory: 128Mi
  sidecars:
    requests:
      cpu: 1m
      memory: 64Mi
    limits:
      cpu: 50m
      memory: 128Mi

patroni:
  postgresql:
    pg_hba: "host all all 0.0.0.0/0 md5"
    parameters:
      shared_buffers: 16MB # default is 128MB; a good tuned default for shared_buffers is 25% of the memory allocated to the pod
      wal_buffers: "-1" # automatically set as 1/32 of shared_buffers or 64kB, whichever is larger
      min_wal_size: 32MB
      max_wal_size: 128MB # default is 1GB
      max_slot_wal_keep_size: 256MB # default is -1, allowing unlimited wal growth when replicas fall behind

proxy:
  pgBouncer:
    image: artifacts.developer.gov.bc.ca/bcgov-docker-local/crunchy-pgbouncer:centos8-1.16-0
    replicas: 2
    requests:
      cpu: 2m
      memory: 16Mi
    limits:
      cpu: 50m
      memory: 32Mi
